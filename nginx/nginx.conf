events {
    worker_connections 1024;
}

http {
    upstream simple_blog {
        server simple-blog:80;
    }

    upstream simple_blog_backend {
        server simple-blog-backend:5000;
    }

    server {
        listen 80;

        server_name simple-blog;

        # Enable access and error logging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Proxy frontend requests
        location / {
            proxy_pass http://simple_blog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy backend API requests
        location ^~ /api/ {
            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://68.183.83.217';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }

            proxy_pass http://simple_blog_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add CORS headers to the response
            add_header 'Access-Control-Allow-Origin' 'http://68.183.83.217';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
        }

        error_page 404 /404.html;
        location = /404.html {
            proxy_pass http://simple_blog;
        }
    }
}